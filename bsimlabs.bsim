BSIM Notes

====MODULO====

.include beta.uasm

		LD(R31, X, R0)
		LD(R31, Y, R1)
		LD(R31, Z, R2)

    DIV(R0, R1, R3)
		MUL(R1, R3, R4)
		SUB(R0, R4, R2)

    ST(R2, Z, R31)
	

HALT()

.=0x400
X: LONG(347)
Y: LONG(245)
Z: LONG(0)




==================================

===REVERSING ELEMENTS OF ARRAY===

LD(R31, N, R0)
SUBC(R0, 1, R0)

MULC(R0, 4, R0)     | offset A
ADD(R31, R31, R1)   | offset A*
DIVC(R0, 2, R5)	    | R5 is half of the offset

ADD(R31, R31, R2)   | temporary holder

loop:
  LD(R0, A, R3)     | R3 is the current A* item
  LD(R1, A, R4)     | R4 is the current A item
  CMPLE(R0, R5, R6)
  BT(R6, end, R31)
  
  SUB(R2, R2, R2)   | remove value of R2
  ADD(R2, R3, R2)   | store R3 to R2
  SUB(R3, R3, R3)
  ADD(R3, R4, R3)
  SUB(R4, R4, R4)
  ADD(R4, R2, R4)
  ST(R3, A, R0)
  ST(R4, A, R1)
  
  SUBC(R0, 4, R0)   | iterate A
  ADDC(R1, 4, R1)   | iterate A*
  BT(R0, loop, R31)
  
end:
  
  HALT()

.=0x400
N: LONG(4)
A: LONG(1)
LONG(2)
LONG(3)
LONG(4)

============================================

X Y Z

0 0 0
0 1 1
1 0 1
1 1 0

ONE TIME PAD (4-BiT KEY)

.include beta.uasm

LD(R31, X, R0)
LD(R31, Y, R1)

XOR(R0, R1, R2)

ST(R2, Z, R31)

HALT()

.=0x400
X: LONG(1)
Y: LONG(0x11111111)
Z: LONG(0)